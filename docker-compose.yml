version: '3.8'

services:
  # Main application
  browser-automation:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
      # Browser settings optimized for Docker
      - BROWSER_HEADLESS=true
      - BROWSER_DISABLE_SECURITY=true
      - PLAYWRIGHT_BROWSERS_PATH=/app/.cache/ms-playwright
      # Resource limits
      - MAX_SESSIONS=20
      - MAX_BROWSER_INSTANCES=5
      - MAX_MEMORY_USAGE_MB=2048
      - SESSION_TIMEOUT_MINUTES=30
      # Security
      - CORS_ORIGINS=*
      - ENABLE_RATE_LIMITING=true
      - API_RATE_LIMIT_PER_MINUTE=100
    volumes:
      # Persist data
      - ./tmp:/app/tmp
      # Playwright cache
      - playwright_cache:/app/.cache/ms-playwright
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '0.5'
    networks:
      - app-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  # Optional: Monitoring with Prometheus (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   networks:
  #     - app-network

  # Optional: Grafana for dashboards (uncomment if needed)
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - app-network

  # Web UI (your existing webui.py)
  webui:
    build:
      context: .
      dockerfile: Dockerfile.webui
    ports:
      - "7788:7788"
    environment:
      - BACKEND_API_URL=http://browser-automation:8000
    depends_on:
      - browser-automation
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis_data:
  playwright_cache:
  # prometheus_data:
  # grafana_data:

networks:
  app-network:
    driver: bridge